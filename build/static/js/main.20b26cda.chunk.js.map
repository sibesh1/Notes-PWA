{"version":3,"sources":["AddNote.js","Note.js","Footer.js","ShowNote.js","App.js","reportWebVitals.js","index.js"],"names":["AddNote","props","useState","newNote","setNote","className","onSubmit","e","preventDefault","noteObject","content","date","Date","important","Math","random","axios","post","then","response","setNotes","notes","concat","data","type","name","placeholder","value","onChange","target","Note","note","idx","url","imp","setImp","Fragment","substr","onClick","notetemp","find","n","id","changedNote","put","map","note1","catch","err","console","log","handleClick","window","confirm","delete","filter","handleDelete","Footer","style","color","fontStyle","fontSize","margin","ShowNote","showAll","setShowAll","useEffect","get","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20b26cda.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddNote(props) {\r\n  const url = \"/api/notes\";\r\n  const [newNote, setNote] = useState(\"\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date(),\r\n      important: Math.random() < 0.5,\r\n    };\r\n    axios.post(url, noteObject).then((response) => {\r\n      props.setNotes(props.notes.concat(response.data));\r\n      setNote(\"\");\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"Form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Add Note:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Add New Note\"\r\n            value={newNote}\r\n            onChange={(e) => setNote(e.target.value)}\r\n          />\r\n        </label>\r\n        <input type=\"submit\" value=\"Add\" className=\"inputSubmit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNote;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction Note({ note, idx, url, notes, setNotes }) {\r\n  const [imp, setImp] = useState(note.important);\r\n  const handleClick = () => {\r\n    //console.log(\"button clicked\");\r\n    const notetemp = notes.find((n) => n.id === note.id);\r\n    const changedNote = { ...notetemp, important: !note.important };\r\n    axios\r\n      .put(`${url}/${note.id}`, changedNote)\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        setNotes(\r\n          notes.map((note1) => (note1.id === note.id ? response.data : note1))\r\n        );\r\n        setImp(!imp);\r\n        //console.log(notes);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const handleDelete = (id) => {\r\n    //console.log(\"button clicked\", id);\r\n    let r = window.confirm(\"Are you sure?\");\r\n    if (r) {\r\n      const notetemp = notes.find((n) => n.id === id);\r\n      //console.log(notetemp);\r\n      axios\r\n        .delete(`${url}/${id}`, notetemp)\r\n        .then((response) => {\r\n          //console.log(response.data);\r\n          setNotes(notes.filter((note1) => note1.id !== id));\r\n          //console.log(notes);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <h4>\r\n        {idx + 1}. {note.content}\r\n      </h4>\r\n      <p>\r\n        Date Added: {note.date.substr(11, 8)},{note.date.substr(0, 10)}\r\n      </p>\r\n      <button value={imp} onClick={() => handleClick()}>\r\n        {imp ? \"Important\" : \"Not Important\"}\r\n      </button>\r\n      <button onClick={() => handleDelete(note.id)}>Delete</button>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const footerStyle = {\r\n    color: \"#4ECDC4\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n    margin: \"auto\",\r\n  };\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        A Simple Notes App By <strong>Sibesh Behera</strong>\r\n      </em>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddNote from \"./AddNote\";\r\nimport Note from \"./Note\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction ShowNote() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [showAll, setShowAll] = useState(true);\r\n  const url = \"/api/notes\";\r\n  useEffect(() => {\r\n    axios.get(url).then((response) => {\r\n      setNotes(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Parent\">\r\n      <AddNote setNotes={setNotes} notes={notes} />\r\n      <button onClick={() => setShowAll(!showAll)} className=\"showImpButton\">\r\n        {showAll ? \"Show Important\" : \"Show All\"}\r\n      </button>\r\n      <div className=\"Note\">\r\n        {showAll\r\n          ? notes.map((note, idx) => (\r\n              <Note\r\n                note={note}\r\n                idx={idx}\r\n                url={url}\r\n                notes={notes}\r\n                setNotes={setNotes}\r\n                key={note.id}\r\n              />\r\n            ))\r\n          : notes\r\n              .filter((note) => note.important)\r\n              .map((note, idx) => (\r\n                <Note\r\n                  note={note}\r\n                  idx={idx}\r\n                  url={url}\r\n                  notes={notes}\r\n                  setNotes={setNotes}\r\n                  key={note.id}\r\n                />\r\n              ))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowNote;\r\n","import ShowNote from \"./ShowNote\";\n\nfunction App() {\n  return (\n    <>\n      <ShowNote />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}